min:
  description: >-
    Implement the `min(x, y)` function for two real numbers as inputs!
  tags: [proc-1, python-1, algorithms-1]
  criteria:
    - MANDATORY! For any two real numbers the less is returned
    - MANDATORY! No built-in functions are used

max:
  description: >-
    Implement the `max(x, y)` function for two real numbers as inputs!
  tags: [proc-1, python-1, algorithms-1]
  criteria:
    - MANDATORY! For any two real numbers the greater is returned
    - MANDATORY! No built-in functions are used

len:
  description: >-
    Implement the `len(iterable)` function for an iterable input which returns
    the length of the iterable!
  tags: [proc-1, python-1, algorithms-1]
  criteria:
    - MANDATORY! For any iterable the count of the elements is returned
    - MANDATORY! No built-in functions are used

multiply:
  description: >-
    Implement the `multiply(x, y)` function for integer numbers as inputs!
    Do not use the `*`, `/`, and `//` operators and any built-in functions,
    but you may (and should) use `+`.
  tags: [proc-1, python-1, algorithms-1]
  criteria:
    - For any two integer inputs the returned value equals the result of `x * y`
    - MANDATORY! Neither `*`, `/`, `//` nor any built-in functions are used

pow:
  description: >-
    Implement the `pow(x, y)` function for real base numbers and positive
    integer exponents! Do not use the `**` operator and any built-in functions!
    Here you can use `*`.
  tags: [proc-1, python-1, algorithms-1]
  criteria:
    - For inputs from the specified domain the returned value equals the result of `x**y`
    - MANDATORY! Neither `**` nor any built-in functions are used

divmod:
  description: >-
    Implement the `divmod(x, y)` function for for two integer numbers as inputs!
    Do not use the `//` and the `%` operators and any built-in functions!
    It should return a tuple: the first value should be equal to the value of
    `x // y` and the second equal to the value of `x % y`!
    Do not use the `//` operator and any built-in functions!
  tags: [proc-1, python-1, algorithms-1]
  extra: yes
  criteria:
    - For any two positive integer inputs the returned value equals `(x // y, x % y)`
    - For any two +/- integer inputs the returned value equals `(x // y, x % y)`
    - MANDATORY! Neither `//` nor any built-in functions are used
